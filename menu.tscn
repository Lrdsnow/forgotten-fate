[gd_scene load_steps=76 format=2]

[ext_resource path="res://menu.gd" type="Script" id=1]
[ext_resource path="res://fonts/Roboto-Regular.ttf" type="DynamicFontData" id=2]
[ext_resource path="res://Scenes/menu/textures/fogottenfate.png" type="Texture" id=3]
[ext_resource path="res://textures/floor-CT.tres" type="Material" id=4]
[ext_resource path="res://Scenes/menu/textures/blur.tres" type="Material" id=5]
[ext_resource path="res://models/wheelchair.tscn" type="PackedScene" id=9]
[ext_resource path="res://textures/Tech_PlasticBase/Tech_PlasticBase_roughness.jpg" type="Texture" id=11]
[ext_resource path="res://textures/Tech_PlasticBase/Tech_PlasticBase_metallic.jpg" type="Texture" id=12]
[ext_resource path="res://textures/Tech_PlasticBase/Tech_PlasticBase_normal.jpg" type="Texture" id=13]
[ext_resource path="res://textures/Tech_PlasticBase/Tech_PlasticBase_glossiness.jpg" type="Texture" id=17]

[sub_resource type="Environment" id=43]

[sub_resource type="CubeMesh" id=45]
material = ExtResource( 4 )
size = Vector3( 10, 0.1, 10 )

[sub_resource type="SpatialMaterial" id=46]
albedo_color = Color( 0.470588, 0.470588, 0.470588, 1 )
metallic_texture = ExtResource( 12 )
roughness_texture = ExtResource( 11 )
normal_enabled = true
normal_scale = 1.0
normal_texture = ExtResource( 13 )
subsurf_scatter_enabled = true
subsurf_scatter_strength = 0.0
subsurf_scatter_texture = ExtResource( 17 )

[sub_resource type="CubeMesh" id=48]
material = SubResource( 46 )
size = Vector3( 0.1, 10, 10 )

[sub_resource type="SpatialMaterial" id=49]
albedo_color = Color( 0.2, 0.168627, 0.117647, 1 )
metallic_texture = ExtResource( 12 )
roughness_texture = ExtResource( 11 )
normal_enabled = true
normal_scale = 1.0
normal_texture = ExtResource( 13 )
uv1_scale = Vector3( 10, 10, 10 )

[sub_resource type="CubeMesh" id=50]
material = SubResource( 49 )
size = Vector3( 0.1, 0.5, 10.1 )

[sub_resource type="CubeMesh" id=47]
material = SubResource( 46 )
size = Vector3( 10, 10, 0.1 )

[sub_resource type="DynamicFont" id=51]
size = 31
use_mipmaps = true
use_filter = true
font_data = ExtResource( 2 )

[sub_resource type="StyleBoxFlat" id=52]
bg_color = Color( 1, 1, 1, 0.411765 )
corner_radius_top_left = 10
corner_radius_top_right = 10
corner_radius_bottom_right = 10
corner_radius_bottom_left = 10

[sub_resource type="StyleBoxFlat" id=53]
bg_color = Color( 0.6, 0.6, 0.6, 0 )

[sub_resource type="Animation" id=31]
length = 0.001
tracks/0/type = "bezier"
tracks/0/path = NodePath("blur:material:shader_param/blurSize")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0 )
}

[sub_resource type="Animation" id=32]
resource_name = "in"
length = 0.3
tracks/0/type = "bezier"
tracks/0/path = NodePath("blur:material:shader_param/blurSize")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.6, 15, 15, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 0.3 )
}
tracks/1/type = "value"
tracks/1/path = NodePath("cc/modmenu:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="StyleBoxFlat" id=7]
bg_color = Color( 0.152941, 0.152941, 0.152941, 1 )
corner_radius_top_left = 10
corner_radius_top_right = 10
corner_radius_bottom_right = 10
corner_radius_bottom_left = 10

[sub_resource type="DynamicFont" id=9]
size = 29
outline_size = 1
use_mipmaps = true
use_filter = true
font_data = ExtResource( 2 )

[sub_resource type="DynamicFont" id=10]
size = 20
use_mipmaps = true
use_filter = true
font_data = ExtResource( 2 )

[sub_resource type="StyleBoxFlat" id=54]
bg_color = Color( 0.243137, 0.243137, 0.243137, 1 )
corner_radius_top_left = 5
corner_radius_top_right = 5
corner_radius_bottom_right = 5
corner_radius_bottom_left = 5

[sub_resource type="StyleBoxFlat" id=13]
bg_color = Color( 0.25098, 0.25098, 0.25098, 1 )
corner_radius_top_left = 10
corner_radius_top_right = 10
corner_radius_bottom_right = 10
corner_radius_bottom_left = 10

[sub_resource type="StyleBoxFlat" id=14]
bg_color = Color( 0.243137, 0.243137, 0.243137, 1 )
corner_radius_top_left = 10
corner_radius_top_right = 10
corner_radius_bottom_right = 10
corner_radius_bottom_left = 10

[sub_resource type="StyleBoxFlat" id=15]
bg_color = Color( 0.309804, 0.309804, 0.309804, 1 )
corner_radius_top_left = 10
corner_radius_top_right = 10
corner_radius_bottom_right = 10
corner_radius_bottom_left = 10

[sub_resource type="StyleBoxFlat" id=16]
bg_color = Color( 0.25098, 0.25098, 0.25098, 1 )
corner_radius_top_left = 10
corner_radius_top_right = 10
corner_radius_bottom_right = 10
corner_radius_bottom_left = 10

[sub_resource type="StyleBoxFlat" id=17]
bg_color = Color( 0.223529, 0.223529, 0.223529, 1 )
corner_radius_top_left = 10
corner_radius_top_right = 10
corner_radius_bottom_right = 10
corner_radius_bottom_left = 10

[sub_resource type="StyleBoxFlat" id=18]
bg_color = Color( 0.152941, 0.152941, 0.152941, 1 )
corner_radius_top_left = 10
corner_radius_top_right = 10
corner_radius_bottom_right = 10
corner_radius_bottom_left = 10

[sub_resource type="DynamicFont" id=19]
use_mipmaps = true
use_filter = true
font_data = ExtResource( 2 )

[sub_resource type="StyleBoxFlat" id=20]
bg_color = Color( 0.313726, 0.313726, 0.313726, 1 )
border_width_left = 5
border_width_right = 5
border_color = Color( 0.8, 0.8, 0.8, 0 )
corner_radius_top_left = 5
corner_radius_top_right = 5
corner_radius_bottom_right = 5
corner_radius_bottom_left = 5

[sub_resource type="StyleBoxFlat" id=21]
bg_color = Color( 0.243137, 0.243137, 0.243137, 1 )
corner_radius_top_left = 5
corner_radius_top_right = 5
corner_radius_bottom_right = 5
corner_radius_bottom_left = 5

[sub_resource type="StyleBoxFlat" id=22]
bg_color = Color( 0.156863, 0.156863, 0.156863, 1 )
corner_radius_top_left = 10
corner_radius_top_right = 10
corner_radius_bottom_right = 10
corner_radius_bottom_left = 10

[sub_resource type="StyleBoxFlat" id=23]
corner_radius_top_left = 10
corner_radius_top_right = 10
corner_radius_bottom_right = 10
corner_radius_bottom_left = 10

[sub_resource type="DynamicFont" id=24]
size = 15
use_mipmaps = true
use_filter = true
extra_spacing_top = 1
extra_spacing_bottom = 1
font_data = ExtResource( 2 )

[sub_resource type="StyleBoxFlat" id=25]
bg_color = Color( 0.180392, 0.180392, 0.180392, 1 )
corner_radius_top_left = 5
corner_radius_top_right = 5

[sub_resource type="StyleBoxFlat" id=26]
bg_color = Color( 0.180392, 0.180392, 0.180392, 1 )
corner_radius_top_left = 5
corner_radius_top_right = 5

[sub_resource type="StyleBoxFlat" id=27]
bg_color = Color( 0.243137, 0.243137, 0.243137, 1 )
corner_radius_top_left = 5
corner_radius_top_right = 5

[sub_resource type="Theme" id=28]
Button/styles/disabled = SubResource( 54 )
Button/styles/focus = SubResource( 54 )
Button/styles/hover = SubResource( 13 )
Button/styles/normal = SubResource( 54 )
Button/styles/pressed = SubResource( 14 )
OptionButton/styles/disabled = SubResource( 54 )
OptionButton/styles/focus = SubResource( 54 )
OptionButton/styles/hover = SubResource( 15 )
OptionButton/styles/normal = SubResource( 16 )
OptionButton/styles/pressed = SubResource( 17 )
Panel/styles/panel = SubResource( 18 )
PopupMenu/fonts/font = SubResource( 19 )
PopupMenu/styles/hover = SubResource( 20 )
PopupMenu/styles/panel = SubResource( 21 )
PopupMenu/styles/separator = SubResource( 22 )
PopupPanel/styles/panel = SubResource( 23 )
TabContainer/fonts/font = SubResource( 24 )
TabContainer/styles/panel = SubResource( 54 )
TabContainer/styles/tab_bg = SubResource( 25 )
TabContainer/styles/tab_disabled = SubResource( 26 )
TabContainer/styles/tab_fg = SubResource( 27 )

[sub_resource type="StyleBoxFlat" id=33]
bg_color = Color( 0.337255, 0.337255, 0.337255, 1 )
corner_radius_top_left = 15
corner_radius_top_right = 15
corner_radius_bottom_right = 15
corner_radius_bottom_left = 15

[sub_resource type="StyleBoxFlat" id=34]
bg_color = Color( 0.243137, 0.243137, 0.243137, 1 )
corner_radius_top_left = 15
corner_radius_top_right = 15
corner_radius_bottom_right = 15
corner_radius_bottom_left = 15

[sub_resource type="StyleBoxFlat" id=12]
bg_color = Color( 0.305882, 0.305882, 0.305882, 1 )
corner_radius_top_left = 15
corner_radius_top_right = 15
corner_radius_bottom_right = 15
corner_radius_bottom_left = 15

[sub_resource type="DynamicFont" id=30]
size = 24
use_mipmaps = true
use_filter = true
font_data = ExtResource( 2 )

[sub_resource type="DynamicFont" id=8]
use_mipmaps = true
use_filter = true
font_data = ExtResource( 2 )

[sub_resource type="StyleBoxFlat" id=29]
bg_color = Color( 0.294118, 0.294118, 0.294118, 1 )
corner_radius_top_left = 5
corner_radius_top_right = 5
corner_radius_bottom_right = 5
corner_radius_bottom_left = 5

[sub_resource type="DynamicFont" id=35]
use_mipmaps = true
use_filter = true
font_data = ExtResource( 2 )

[sub_resource type="StyleBoxFlat" id=36]
bg_color = Color( 1, 0, 0, 0.117647 )
corner_radius_top_left = 10
corner_radius_top_right = 10
corner_radius_bottom_right = 10
corner_radius_bottom_left = 10

[sub_resource type="StyleBoxFlat" id=37]
bg_color = Color( 0.6, 0.6, 0.6, 0 )

[sub_resource type="DynamicFont" id=40]
size = 32
outline_size = 1
use_mipmaps = true
use_filter = true
font_data = ExtResource( 2 )

[sub_resource type="Animation" id=38]
length = 0.001
tracks/0/type = "bezier"
tracks/0/path = NodePath("blur:material:shader_param/blurSize")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0 )
}

[sub_resource type="Animation" id=39]
resource_name = "in"
length = 0.3
tracks/0/type = "bezier"
tracks/0/path = NodePath("blur:material:shader_param/blurSize")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.6, 15, 15, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 0.3 )
}
tracks/1/type = "value"
tracks/1/path = NodePath("setmenu:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="Animation" id=41]
length = 0.001
tracks/0/type = "bezier"
tracks/0/path = NodePath("blur:material:shader_param/blurSize")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0 )
}

[sub_resource type="Animation" id=42]
resource_name = "in"
length = 0.3
tracks/0/type = "bezier"
tracks/0/path = NodePath("blur:material:shader_param/blurSize")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.6, 15, 15, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 0.3 )
}
tracks/1/type = "value"
tracks/1/path = NodePath("extmenu:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="Animation" id=55]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("light:light_energy")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 1.0 ]
}

[sub_resource type="Animation" id=56]
resource_name = "flicker"
length = 0.4
step = 0.01
tracks/0/type = "value"
tracks/0/path = NodePath("light:light_energy")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.12, 0.19, 0.26, 0.39 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ 1.0, 0.0, 0.0, 0.666667, 1.0 ]
}

[sub_resource type="StyleBoxFlat" id=57]
bg_color = Color( 0.215686, 0.215686, 0.215686, 1 )
corner_radius_top_left = 10
corner_radius_bottom_right = 10
corner_radius_bottom_left = 10

[sub_resource type="DynamicFont" id=67]
size = 20
use_mipmaps = true
use_filter = true
font_data = ExtResource( 2 )

[sub_resource type="StyleBoxFlat" id=58]
bg_color = Color( 0.6, 0.6, 0.6, 0 )

[sub_resource type="StyleBoxFlat" id=59]
bg_color = Color( 0.6, 0.6, 0.6, 0 )
border_width_left = 5
border_width_top = 5
border_width_right = 5
border_width_bottom = 5

[sub_resource type="Theme" id=60]
Button/fonts/font = SubResource( 67 )
Button/styles/focus = SubResource( 58 )
Button/styles/hover = SubResource( 59 )
Button/styles/normal = SubResource( 58 )
Button/styles/pressed = SubResource( 58 )

[sub_resource type="StyleBoxFlat" id=61]
bg_color = Color( 0.6, 0.6, 0.6, 0 )
border_width_left = 5
border_width_top = 5
border_width_right = 5
border_width_bottom = 5
corner_radius_top_left = 10

[sub_resource type="DynamicFont" id=62]
size = 25
use_mipmaps = true
use_filter = true
font_data = ExtResource( 2 )

[sub_resource type="DynamicFont" id=63]
use_mipmaps = true
use_filter = true
font_data = ExtResource( 2 )

[sub_resource type="StyleBoxFlat" id=64]
bg_color = Color( 0.6, 0.6, 0.6, 0 )
border_width_left = 5
border_width_top = 5
border_width_right = 5
border_width_bottom = 5
corner_radius_bottom_right = 10
corner_radius_bottom_left = 10

[sub_resource type="StyleBoxFlat" id=72]
bg_color = Color( 0.6, 0.6, 0.6, 0 )
border_width_left = 5
border_width_top = 5
border_width_right = 5
border_width_bottom = 5

[sub_resource type="StyleBoxFlat" id=69]
bg_color = Color( 0.215686, 0.215686, 0.215686, 1 )
border_width_left = 5
border_width_top = 5
border_width_right = 5
border_width_bottom = 5
corner_radius_top_right = 10
corner_radius_bottom_right = 10

[sub_resource type="StyleBoxFlat" id=68]
bg_color = Color( 0.215686, 0.215686, 0.215686, 1 )
corner_radius_top_right = 10
corner_radius_bottom_right = 10

[sub_resource type="Animation" id=65]
length = 0.001
tracks/0/type = "bezier"
tracks/0/path = NodePath("blur:material:shader_param/blurSize")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0 )
}
tracks/1/type = "value"
tracks/1/path = NodePath("cc/menu:rect_size")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 334, 396 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("cc/menu/hard:custom_styles/hover")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ SubResource( 64 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("cc/menu/true:rect_position")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 396 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("cc/menu/true:modulate")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ) ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("cc/menu/true:visible")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ true ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("cc/menu/true/easy:self_modulate")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ) ]
}
tracks/7/type = "value"
tracks/7/path = NodePath("cc/menu/true/desc:self_modulate")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="Animation" id=66]
resource_name = "in"
length = 0.3
tracks/0/type = "bezier"
tracks/0/path = NodePath("blur:material:shader_param/blurSize")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.6, 15, 15, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 0.3 )
}
tracks/1/type = "value"
tracks/1/path = NodePath("cc/menu:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="Animation" id=73]
resource_name = "truefate"
length = 0.2
tracks/0/type = "value"
tracks/0/path = NodePath("cc/menu:rect_size")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 334, 396 ), Vector2( 334, 528 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("cc/menu/hard:custom_styles/hover")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ SubResource( 64 ), SubResource( 72 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("cc/menu/true:rect_position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 0, 264 ), Vector2( 0, 396 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("cc/menu/true:modulate")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("cc/menu/true/easy:self_modulate")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 0.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("cc/menu/true/desc:self_modulate")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0, 0.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="Shader" id=70]
code = "/*
Shader from Godot Shaders - the free shader library.
godotshaders.com/shader/VHS-and-CRT-monitor-effect

This shader is under CC0 license. Feel free to use, improve and 
change this shader according to your needs and consider sharing 
the modified result to godotshaders.com.
*/

shader_type canvas_item;

//*** IMPORTANT! ***/ 
// - If you are using this shader to affect the node it is applied to set 'overlay' to false (unchecked in the instepctor).
// - If you are using this shader as an overlay, and want the shader to affect the nodes below in the Scene hierarchy,
//   set 'overlay' to true (checked in the inspector).
// On Mac there is potentially a bug causing this to not work properly. If that is the case and you want to use the shader as an overlay
// change all \"overlay ? SCREEN_TEXTURE : TEXTURE\" to only \"SCREEN_TEXTURE\" on lines 129-140, and \"vec2 uv = overlay ? warp(SCREEN_UV) : warp(UV);\"
// to \"vec2 uv = warp(SCREEN_UV);\" on line 98.
uniform bool overlay = false;

uniform float scanlines_opacity : hint_range(0.0, 1.0) = 0.4;
uniform float scanlines_width : hint_range(0.0, 0.5) = 0.25;
uniform float grille_opacity : hint_range(0.0, 1.0) = 0.3;
uniform vec2 resolution = vec2(640.0, 480.0); // Set the number of rows and columns the texture will be divided in. Scanlines and grille will make a square based on these values

uniform bool pixelate = true; // Fill each square (\"pixel\") with a sampled color, creating a pixel look and a more accurate representation of how a CRT monitor would work.

uniform bool roll = true;
uniform float roll_speed = 8.0; // Positive values are down, negative are up
uniform float roll_size : hint_range(0.0, 100.0) = 15.0;
uniform float roll_variation : hint_range(0.1, 5.0) = 1.8; // This valie is not an exact science. You have to play around with the value to find a look you like. How this works is explained in the code below.
uniform float distort_intensity : hint_range(0.0, 0.2) = 0.05; // The distortion created by the rolling effect.

uniform float noise_opacity : hint_range(0.0, 1.0) = 0.4;
uniform float noise_speed = 5.0; // There is a movement in the noise pattern that can be hard to see first. This sets the speed of that movement.

uniform float static_noise_intensity : hint_range(0.0, 1.0) = 0.06;

uniform float aberration : hint_range(-1.0, 1.0) = 0.03; // Chromatic aberration, a distortion on each color channel.
uniform float brightness = 1.4; // When adding scanline gaps and grille the image can get very dark. Brightness tries to compensate for that.
uniform bool discolor = true; // Add a discolor effect simulating a VHS

uniform float warp_amount :hint_range(0.0, 5.0) = 1.0; // Warp the texture edges simulating the curved glass of a CRT monitor or old TV.
uniform bool clip_warp = false;

uniform float vignette_intensity = 0.4; // Size of the vignette, how far towards the middle it should go.
uniform float vignette_opacity : hint_range(0.0, 1.0) = 0.5;

// Used by the noise functin to generate a pseudo random value between 0.0 and 1.0
vec2 random(vec2 uv){
    uv = vec2( dot(uv, vec2(127.1,311.7) ),
               dot(uv, vec2(269.5,183.3) ) );
    return -1.0 + 2.0 * fract(sin(uv) * 43758.5453123);
}

// Generate a Perlin noise used by the distortion effects
float noise(vec2 uv) {
    vec2 uv_index = floor(uv);
    vec2 uv_fract = fract(uv);

    vec2 blur = smoothstep(0.0, 1.0, uv_fract);

    return mix( mix( dot( random(uv_index + vec2(0.0,0.0) ), uv_fract - vec2(0.0,0.0) ),
                     dot( random(uv_index + vec2(1.0,0.0) ), uv_fract - vec2(1.0,0.0) ), blur.x),
                mix( dot( random(uv_index + vec2(0.0,1.0) ), uv_fract - vec2(0.0,1.0) ),
                     dot( random(uv_index + vec2(1.0,1.0) ), uv_fract - vec2(1.0,1.0) ), blur.x), blur.y) * 0.5 + 0.5;
}

// Takes in the UV and warps the edges, creating the spherized effect
vec2 warp(vec2 uv){
	vec2 delta = uv - 0.5;
	float delta2 = dot(delta.xy, delta.xy);
	float delta4 = delta2 * delta2;
	float delta_offset = delta4 * warp_amount;
	
	return uv + delta * delta_offset;
}

// Adds a black border to hide stretched pixel created by the warp effect
float border (vec2 uv){
	float radius = min(warp_amount, 0.08);
	radius = max(min(min(abs(radius * 2.0), abs(1.0)), abs(1.0)), 1e-5);
	vec2 abs_uv = abs(uv * 2.0 - 1.0) - vec2(1.0, 1.0) + radius;
	float dist = length(max(vec2(0.0), abs_uv)) / radius;
	float square = smoothstep(0.96, 1.0, dist);
	return clamp(1.0 - square, 0.0, 1.0);
}

// Adds a vignette shadow to the edges of the image
float vignette(vec2 uv){
	uv *= 1.0 - uv.xy;
	float vignette = uv.x * uv.y * 15.0;
	return pow(vignette, vignette_intensity * vignette_opacity);
}

void fragment()
{
	vec2 uv = overlay ? warp(SCREEN_UV) : warp(UV); // Warp the uv. uv will be used in most cases instead of UV to keep the warping
	vec2 text_uv = uv;
	vec2 roll_uv = vec2(0.0);
	float time = roll ? TIME : 0.0;
	

	// Pixelate the texture based on the given resolution.
	if (pixelate)
	{
		text_uv = ceil(uv * resolution) / resolution;
	}
	
	// Create the rolling effect. We need roll_line a bit later to make the noise effect.
	// That is why this runs if roll is true OR noise_opacity is over 0.
	float roll_line = 0.0;
	if (roll || noise_opacity > 0.0)
	{
		// Create the areas/lines where the texture will be distorted.
		roll_line = smoothstep(0.3, 0.9, sin(uv.y * roll_size - (time * roll_speed) ) );
		// Create more lines of a different size and apply to the first set of lines. This creates a bit of variation.
		roll_line *= roll_line * smoothstep(0.3, 0.9, sin(uv.y * roll_size * roll_variation - (time * roll_speed * roll_variation) ) );
		// Distort the UV where where the lines are
		roll_uv = vec2(( roll_line * distort_intensity * (1.-UV.x)), 0.0);
	}
	
	vec4 text;
	if (roll)
	{
		// If roll is true distort the texture with roll_uv. The texture is split up into RGB to 
		// make some chromatic aberration. We apply the aberration to the red and green channels accorging to the aberration parameter
		// and intensify it a bit in the roll distortion.
		text.r = texture(SCREEN_TEXTURE, text_uv + roll_uv * 0.8 + vec2(aberration, 0.0) * .1).r;
		text.g = texture(SCREEN_TEXTURE, text_uv + roll_uv * 1.2 - vec2(aberration, 0.0) * .1 ).g;
		text.b = texture(SCREEN_TEXTURE, text_uv + roll_uv).b;
		text.a = 1.0;
	}
	else
	{
		// If roll is false only apply the aberration without any distorion. The aberration values are very small so the .1 is only 
		// to make the slider in the Inspector less sensitive.
		text.r = texture(SCREEN_TEXTURE, text_uv + vec2(aberration, 0.0) * .1).r;
		text.g = texture(SCREEN_TEXTURE, text_uv - vec2(aberration, 0.0) * .1).g;
		text.b = texture(SCREEN_TEXTURE, text_uv).b;
		text.a = 1.0;
	}
	
	float r = text.r;
	float g = text.g;
	float b = text.b;
	
	uv = warp(UV);
	
	// CRT monitors don't have pixels but groups of red, green and blue dots or lines, called grille. We isolate the texture's color channels 
	// and divide it up in 3 offsetted lines to show the red, green and blue colors next to each other, with a small black gap between.
	if (grille_opacity > 0.0){
		
		float g_r = smoothstep(0.85, 0.95, abs(sin(uv.x * (resolution.x * 3.14159265))));
		r = mix(r, r * g_r, grille_opacity);
		
		float g_g = smoothstep(0.85, 0.95, abs(sin(1.05 + uv.x * (resolution.x * 3.14159265))));
		g = mix(g, g * g_g, grille_opacity);
		
		float b_b = smoothstep(0.85, 0.95, abs(sin(2.1 + uv.x * (resolution.x * 3.14159265))));
		b = mix(b, b * b_b, grille_opacity);
		
	}
	
	// Apply the grille to the texture's color channels and apply Brightness. Since the grille and the scanlines (below) make the image very dark you
	// can compensate by increasing the brightness.
	text.r = clamp(r * brightness, 0.0, 1.0);
	text.g = clamp(g * brightness, 0.0, 1.0);
	text.b = clamp(b * brightness, 0.0, 1.0);
	
	// Scanlines are the horizontal lines that make up the image on a CRT monitor. 
	// Here we are actual setting the black gap between each line, which I guess is not the right definition of the word, but you get the idea  
	float scanlines = 0.5;
	if (scanlines_opacity > 0.0)
	{
		// Same technique as above, create lines with sine and applying it to the texture. Smoothstep to allow setting the line size.
		scanlines = smoothstep(scanlines_width, scanlines_width + 0.5, abs(sin(uv.y * (resolution.y * 3.14159265))));
		text.rgb = mix(text.rgb, text.rgb * vec3(scanlines), scanlines_opacity);
	}
	
	// Apply the banded noise.
	if (noise_opacity > 0.0)
	{
		// Generate a noise pattern that is very stretched horizontally, and animate it with noise_speed
		float noise = smoothstep(0.4, 0.5, noise(uv * vec2(2.0, 200.0) + vec2(10.0, (TIME * (noise_speed))) ) );
		
		// We use roll_line (set above) to define how big the noise should be vertically (multiplying cuts off all black parts).
		// We also add in some basic noise with random() to break up the noise pattern above. The noise is sized according to 
		// the resolution value set in the inspector. If you don't like this look you can 
		// change \"ceil(uv * resolution) / resolution\" to only \"uv\" to make it less pixelated. Or multiply resolution with som value
		// greater than 1.0 to make them smaller.
		roll_line *= noise * scanlines * clamp(random((ceil(uv * resolution) / resolution) + vec2(TIME * 0.8, 0.0)).x + 0.8, 0.0, 1.0);
		// Add it to the texture based on noise_opacity
		text.rgb = clamp(mix(text.rgb, text.rgb + roll_line, noise_opacity), vec3(0.0), vec3(1.0));
	}
	
	// Apply static noise by generating it over the whole screen in the same way as above
	if (static_noise_intensity > 0.0)
	{
		text.rgb += clamp(random((ceil(uv * resolution) / resolution) + fract(TIME)).x, 0.0, 1.0) * static_noise_intensity;
	}
	
	// Apply a black border to hide imperfections caused by the warping.
	// Also apply the vignette
	text.rgb *= border(uv);
	text.rgb *= vignette(uv);
	// Hides the black border and make that area transparent. Good if you want to add the the texture on top an image of a TV or monitor.
	if (clip_warp)
	{
		text.a = border(uv);
	}
	
	// Apply discoloration to get a VHS look (lower saturation and higher contrast)
	// You can play with the values below or expose them in the Inspector.
	float saturation = 0.5;
	float contrast = 1.2;
	if (discolor)
	{
		// Saturation
		vec3 greyscale = vec3(text.r + text.g + text.b) / 3.;
		text.rgb = mix(text.rgb, greyscale, saturation);
		
		// Contrast
		float midpoint = pow(0.5, 2.2);
		text.rgb = (text.rgb - vec3(midpoint)) * contrast + midpoint;
	}
	
	COLOR = text;
}"

[sub_resource type="ShaderMaterial" id=71]
shader = SubResource( 70 )
shader_param/overlay = true
shader_param/scanlines_opacity = 0.0
shader_param/scanlines_width = 0.0
shader_param/grille_opacity = 0.0
shader_param/resolution = Vector2( 1920, 1080 )
shader_param/pixelate = true
shader_param/roll = true
shader_param/roll_speed = 5.0
shader_param/roll_size = 30.0
shader_param/roll_variation = 0.8
shader_param/distort_intensity = 0.004
shader_param/noise_opacity = 0.05
shader_param/noise_speed = 2.0
shader_param/static_noise_intensity = 0.0
shader_param/aberration = 0.0
shader_param/brightness = 1.4
shader_param/discolor = false
shader_param/warp_amount = 0.1
shader_param/clip_warp = false
shader_param/vignette_intensity = 0.0
shader_param/vignette_opacity = 0.0

[node name="menu" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0

[node name="menu" type="Spatial" parent="."]
script = ExtResource( 1 )

[node name="WorldEnvironment" type="WorldEnvironment" parent="menu"]
environment = SubResource( 43 )

[node name="room" type="Spatial" parent="menu"]

[node name="floor" type="MeshInstance" parent="menu/room"]
mesh = SubResource( 45 )
skeleton = NodePath("../..")
material/0 = null

[node name="2" type="MeshInstance" parent="menu/room"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -4.82307, 4.97871, -0.00895309 )
mesh = SubResource( 48 )
material/0 = null

[node name="3" type="MeshInstance" parent="menu/room/2"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.017386, -4.69666, 0 )
mesh = SubResource( 50 )
skeleton = NodePath("../..")
material/0 = null

[node name="3" type="MeshInstance" parent="menu/room"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 4.99948, 4.97871, -0.00895309 )
mesh = SubResource( 48 )
material/0 = null

[node name="3" type="MeshInstance" parent="menu/room/3"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.010447, -4.69666, 0 )
mesh = SubResource( 50 )
skeleton = NodePath("../..")
material/0 = null

[node name="1" type="MeshInstance" parent="menu/room"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 4.97977, -4.97095 )
mesh = SubResource( 47 )
skeleton = NodePath("../..")
material/0 = null

[node name="3" type="MeshInstance" parent="menu/room/1"]
transform = Transform( -4.37114e-08, 0, 1, 0, 1, 0, -1, 0, -4.37114e-08, 0, -4.70288, 0.00526094 )
mesh = SubResource( 50 )
skeleton = NodePath("../../2/3")
material/0 = null

[node name="wheelchair" parent="menu/room" instance=ExtResource( 9 )]

[node name="Camera" type="Camera" parent="menu"]
transform = Transform( 1, 0, 0, 0, 0.963682, 0.267053, 0, -0.267053, 0.963682, -0.257134, 4.58947, 4.34428 )

[node name="light" type="SpotLight" parent="menu"]
transform = Transform( 1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, 0, 11.9207, 0 )
spot_range = 17.9517
spot_angle = 56.6119

[node name="title" type="CenterContainer" parent="menu"]
margin_right = 1924.0
margin_bottom = 313.0

[node name="HBoxContainer" type="HBoxContainer" parent="menu/title"]
margin_left = 962.0
margin_top = 156.0
margin_right = 962.0
margin_bottom = 156.0
alignment = 1

[node name="title" type="Sprite" parent="menu/title/HBoxContainer"]
texture = ExtResource( 3 )

[node name="cc" type="CenterContainer" parent="menu"]
margin_left = -5.0
margin_top = -5.0
margin_right = 1920.0
margin_bottom = 1077.0

[node name="vc" type="VBoxContainer" parent="menu/cc"]
margin_left = 886.0
margin_top = 440.0
margin_right = 1039.0
margin_bottom = 641.0
alignment = 1

[node name="New Game" type="Button" parent="menu/cc/vc"]
margin_right = 153.0
margin_bottom = 37.0
custom_colors/font_color_disabled = Color( 1, 1, 1, 1 )
custom_colors/font_color_focus = Color( 1, 1, 1, 1 )
custom_colors/font_color = Color( 1, 1, 1, 1 )
custom_colors/font_color_hover = Color( 1, 1, 1, 1 )
custom_colors/font_color_pressed = Color( 1, 1, 1, 1 )
custom_fonts/font = SubResource( 51 )
custom_styles/hover = SubResource( 52 )
custom_styles/pressed = SubResource( 53 )
custom_styles/focus = SubResource( 53 )
custom_styles/disabled = SubResource( 53 )
custom_styles/normal = SubResource( 53 )
text = "New Game"

[node name="Continue" type="Button" parent="menu/cc/vc"]
margin_top = 41.0
margin_right = 153.0
margin_bottom = 78.0
custom_colors/font_color_disabled = Color( 1, 1, 1, 1 )
custom_colors/font_color_focus = Color( 1, 1, 1, 1 )
custom_colors/font_color = Color( 1, 1, 1, 1 )
custom_colors/font_color_hover = Color( 1, 1, 1, 1 )
custom_colors/font_color_pressed = Color( 1, 1, 1, 1 )
custom_fonts/font = SubResource( 51 )
custom_styles/hover = SubResource( 52 )
custom_styles/pressed = SubResource( 53 )
custom_styles/focus = SubResource( 53 )
custom_styles/disabled = SubResource( 53 )
custom_styles/normal = SubResource( 53 )
text = "Continue"

[node name="Multiplayer" type="Button" parent="menu/cc/vc"]
margin_top = 82.0
margin_right = 153.0
margin_bottom = 119.0
custom_colors/font_color_disabled = Color( 1, 1, 1, 1 )
custom_colors/font_color_focus = Color( 1, 1, 1, 1 )
custom_colors/font_color = Color( 1, 1, 1, 1 )
custom_colors/font_color_hover = Color( 1, 1, 1, 1 )
custom_colors/font_color_pressed = Color( 1, 1, 1, 1 )
custom_fonts/font = SubResource( 51 )
custom_styles/hover = SubResource( 52 )
custom_styles/pressed = SubResource( 53 )
custom_styles/focus = SubResource( 53 )
custom_styles/disabled = SubResource( 53 )
custom_styles/normal = SubResource( 53 )
text = "Multiplayer"

[node name="Mods" type="Button" parent="menu/cc/vc"]
margin_top = 123.0
margin_right = 153.0
margin_bottom = 160.0
custom_colors/font_color_disabled = Color( 1, 1, 1, 1 )
custom_colors/font_color_focus = Color( 1, 1, 1, 1 )
custom_colors/font_color = Color( 1, 1, 1, 1 )
custom_colors/font_color_hover = Color( 1, 1, 1, 1 )
custom_colors/font_color_pressed = Color( 1, 1, 1, 1 )
custom_fonts/font = SubResource( 51 )
custom_styles/hover = SubResource( 52 )
custom_styles/pressed = SubResource( 53 )
custom_styles/focus = SubResource( 53 )
custom_styles/disabled = SubResource( 53 )
custom_styles/normal = SubResource( 53 )
text = "Mods"

[node name="Settings" type="Button" parent="menu/cc/vc"]
visible = false
margin_top = 164.0
margin_right = 153.0
margin_bottom = 201.0
custom_colors/font_color_disabled = Color( 1, 1, 1, 1 )
custom_colors/font_color_focus = Color( 1, 1, 1, 1 )
custom_colors/font_color = Color( 1, 1, 1, 1 )
custom_colors/font_color_hover = Color( 1, 1, 1, 1 )
custom_colors/font_color_pressed = Color( 1, 1, 1, 1 )
custom_fonts/font = SubResource( 51 )
custom_styles/hover = SubResource( 52 )
custom_styles/pressed = SubResource( 53 )
custom_styles/focus = SubResource( 53 )
custom_styles/disabled = SubResource( 53 )
custom_styles/normal = SubResource( 53 )
text = "Settings"

[node name="Extras" type="Button" parent="menu/cc/vc"]
visible = false
margin_top = 205.0
margin_right = 153.0
margin_bottom = 242.0
custom_colors/font_color_disabled = Color( 1, 1, 1, 1 )
custom_colors/font_color_focus = Color( 1, 1, 1, 1 )
custom_colors/font_color = Color( 1, 1, 1, 1 )
custom_colors/font_color_hover = Color( 1, 1, 1, 1 )
custom_colors/font_color_pressed = Color( 1, 1, 1, 1 )
custom_fonts/font = SubResource( 51 )
custom_styles/hover = SubResource( 52 )
custom_styles/pressed = SubResource( 53 )
custom_styles/focus = SubResource( 53 )
custom_styles/disabled = SubResource( 53 )
custom_styles/normal = SubResource( 53 )
text = "Extras"

[node name="Exit" type="Button" parent="menu/cc/vc"]
margin_top = 164.0
margin_right = 153.0
margin_bottom = 201.0
custom_colors/font_color_disabled = Color( 1, 1, 1, 1 )
custom_colors/font_color_focus = Color( 1, 1, 1, 1 )
custom_colors/font_color = Color( 1, 1, 1, 1 )
custom_colors/font_color_hover = Color( 1, 1, 1, 1 )
custom_colors/font_color_pressed = Color( 1, 1, 1, 1 )
custom_fonts/font = SubResource( 51 )
custom_styles/hover = SubResource( 52 )
custom_styles/pressed = SubResource( 53 )
custom_styles/focus = SubResource( 53 )
custom_styles/disabled = SubResource( 53 )
custom_styles/normal = SubResource( 53 )
text = "Exit"

[node name="mod_menu" type="Control" parent="menu"]
margin_right = 40.0
margin_bottom = 40.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="blur" type="ColorRect" parent="menu/mod_menu"]
material = ExtResource( 5 )
margin_right = 1919.0
margin_bottom = 1080.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="AnimationPlayer" type="AnimationPlayer" parent="menu/mod_menu"]
anims/RESET = SubResource( 31 )
anims/in = SubResource( 32 )

[node name="cc" type="CenterContainer" parent="menu/mod_menu"]
margin_right = 1919.0
margin_bottom = 1084.0

[node name="modmenu" type="Panel" parent="menu/mod_menu/cc"]
margin_left = 526.0
margin_top = 281.0
margin_right = 1392.0
margin_bottom = 803.0
grow_horizontal = 2
grow_vertical = 2
rect_min_size = Vector2( 866, 522 )
custom_styles/panel = SubResource( 7 )

[node name="mods" type="Label" parent="menu/mod_menu/cc/modmenu"]
margin_left = 14.0
margin_top = 13.0
margin_right = 124.0
margin_bottom = 58.0
custom_fonts/font = SubResource( 9 )
text = "Mods"

[node name="info" type="Label" parent="menu/mod_menu/cc/modmenu"]
margin_left = 13.0
margin_top = 65.0
margin_right = 843.0
margin_bottom = 476.0
custom_fonts/font = SubResource( 10 )
text = "

Warning: Mod's Are Expirimental And May Crash Your Game At ANY Moment."

[node name="Play" type="Button" parent="menu/mod_menu/cc/modmenu/info"]
visible = false
margin_left = 619.0
margin_top = 369.0
margin_right = 827.0
margin_bottom = 416.0
theme = SubResource( 28 )
custom_styles/hover = SubResource( 33 )
custom_styles/pressed = SubResource( 34 )
custom_styles/focus = SubResource( 12 )
custom_styles/disabled = SubResource( 12 )
custom_styles/normal = SubResource( 12 )
text = "Play"

[node name="title" type="Label" parent="menu/mod_menu/cc/modmenu/info"]
margin_right = 830.0
margin_bottom = 411.0
custom_fonts/font = SubResource( 30 )
text = "Select A Mod"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="selmod" type="OptionButton" parent="menu/mod_menu/cc/modmenu"]
margin_left = 17.0
margin_top = 488.0
margin_right = 841.0
margin_bottom = 508.0
theme = SubResource( 28 )
custom_fonts/font = SubResource( 8 )
custom_styles/hover = SubResource( 29 )
custom_styles/pressed = SubResource( 54 )
custom_styles/focus = SubResource( 54 )
custom_styles/disabled = SubResource( 54 )
custom_styles/normal = SubResource( 54 )
text = "   Select A Mod"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="exit" type="Button" parent="menu/mod_menu/cc/modmenu"]
margin_left = 832.0
margin_right = 859.0
margin_bottom = 28.0
custom_fonts/font = SubResource( 35 )
custom_styles/hover = SubResource( 36 )
custom_styles/pressed = SubResource( 37 )
custom_styles/focus = SubResource( 37 )
custom_styles/disabled = SubResource( 37 )
custom_styles/normal = SubResource( 37 )
text = "X"

[node name="settings_menu" type="Control" parent="menu"]
visible = false
margin_right = 40.0
margin_bottom = 40.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="blur" type="ColorRect" parent="menu/settings_menu"]
material = ExtResource( 5 )
margin_right = 1919.0
margin_bottom = 1080.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="setmenu" type="Panel" parent="menu/settings_menu"]
modulate = Color( 1, 1, 1, 0 )
margin_left = 550.0
margin_top = 280.0
margin_right = 1409.0
margin_bottom = 802.0
custom_styles/panel = SubResource( 7 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="exit" type="Button" parent="menu/settings_menu/setmenu"]
margin_left = 832.0
margin_right = 859.0
margin_bottom = 28.0
custom_fonts/font = SubResource( 35 )
custom_styles/hover = SubResource( 36 )
custom_styles/pressed = SubResource( 37 )
custom_styles/focus = SubResource( 37 )
custom_styles/disabled = SubResource( 37 )
custom_styles/normal = SubResource( 37 )
text = "X"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="title" type="Label" parent="menu/settings_menu/setmenu"]
margin_left = 17.0
margin_top = 19.0
margin_right = 134.0
margin_bottom = 57.0
custom_fonts/font = SubResource( 40 )
text = "Settings"

[node name="setan" type="AnimationPlayer" parent="menu/settings_menu"]
anims/RESET = SubResource( 38 )
anims/in = SubResource( 39 )

[node name="extras_menu" type="Control" parent="menu"]
visible = false
margin_right = 40.0
margin_bottom = 40.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="blur" type="ColorRect" parent="menu/extras_menu"]
material = ExtResource( 5 )
margin_right = 1919.0
margin_bottom = 1080.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="extmenu" type="Panel" parent="menu/extras_menu"]
modulate = Color( 1, 1, 1, 0 )
margin_left = 550.0
margin_top = 280.0
margin_right = 1409.0
margin_bottom = 802.0
custom_styles/panel = SubResource( 7 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="exit" type="Button" parent="menu/extras_menu/extmenu"]
margin_left = 832.0
margin_right = 859.0
margin_bottom = 28.0
custom_fonts/font = SubResource( 35 )
custom_styles/hover = SubResource( 36 )
custom_styles/pressed = SubResource( 37 )
custom_styles/focus = SubResource( 37 )
custom_styles/disabled = SubResource( 37 )
custom_styles/normal = SubResource( 37 )
text = "X"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="title" type="Label" parent="menu/extras_menu/extmenu"]
margin_left = 17.0
margin_top = 19.0
margin_right = 134.0
margin_bottom = 57.0
custom_fonts/font = SubResource( 40 )
text = "Extras"

[node name="extan" type="AnimationPlayer" parent="menu/extras_menu"]
anims/RESET = SubResource( 41 )
anims/in = SubResource( 42 )

[node name="flicker" type="AnimationPlayer" parent="menu"]
anims/RESET = SubResource( 55 )
anims/flicker = SubResource( 56 )

[node name="difficulty" type="Control" parent="menu"]
visible = false
margin_right = 40.0
margin_bottom = 40.0

[node name="blur" type="ColorRect" parent="menu/difficulty"]
material = ExtResource( 5 )
margin_right = 1919.0
margin_bottom = 1080.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="cc" type="CenterContainer" parent="menu/difficulty"]
margin_right = 1922.0
margin_bottom = 1082.0

[node name="menu" type="Panel" parent="menu/difficulty/cc"]
modulate = Color( 1, 1, 1, 0 )
margin_left = 794.0
margin_top = 343.0
margin_right = 1128.0
margin_bottom = 739.0
rect_min_size = Vector2( 334, 396 )
custom_styles/panel = SubResource( 57 )

[node name="easy" type="Button" parent="menu/difficulty/cc/menu"]
margin_right = 333.0
margin_bottom = 132.0
theme = SubResource( 60 )
custom_styles/hover = SubResource( 61 )

[node name="easy" type="Label" parent="menu/difficulty/cc/menu/easy"]
margin_left = 9.0
margin_top = 5.0
margin_right = 328.0
margin_bottom = 47.0
custom_fonts/font = SubResource( 62 )
text = "Walk in the park (Easy)"
valign = 1

[node name="desc" type="Label" parent="menu/difficulty/cc/menu/easy"]
margin_left = 9.0
margin_top = 47.0
margin_right = 328.0
margin_bottom = 127.0
custom_fonts/font = SubResource( 63 )
text = "- Easiest Mode

Hint: Beware The Devil"

[node name="medium" type="Button" parent="menu/difficulty/cc/menu"]
margin_top = 132.0
margin_right = 333.0
margin_bottom = 264.0
theme = SubResource( 60 )

[node name="easy" type="Label" parent="menu/difficulty/cc/menu/medium"]
margin_left = 9.0
margin_top = 5.0
margin_right = 328.0
margin_bottom = 47.0
custom_fonts/font = SubResource( 62 )
text = "Hell On Earth (Medium)"
valign = 1

[node name="desc" type="Label" parent="menu/difficulty/cc/menu/medium"]
margin_left = 9.0
margin_top = 47.0
margin_right = 328.0
margin_bottom = 127.0
custom_fonts/font = SubResource( 63 )
text = "- The true experience

Hint: Curse of the nurse"

[node name="hard" type="Button" parent="menu/difficulty/cc/menu"]
margin_top = 264.0
margin_right = 333.0
margin_bottom = 396.0
theme = SubResource( 60 )
custom_styles/hover = SubResource( 64 )

[node name="easy" type="Label" parent="menu/difficulty/cc/menu/hard"]
margin_left = 9.0
margin_top = 5.0
margin_right = 328.0
margin_bottom = 47.0
custom_fonts/font = SubResource( 62 )
text = "The Devils Nightmare (Hard)"
valign = 1

[node name="desc" type="Label" parent="menu/difficulty/cc/menu/hard"]
margin_left = 9.0
margin_top = 47.0
margin_right = 328.0
margin_bottom = 132.0
custom_fonts/font = SubResource( 63 )
text = "- Have fun ;)

Hint: Everyone Loves Suprises ;)"

[node name="true" type="Button" parent="menu/difficulty/cc/menu"]
margin_top = 396.0
margin_right = 333.0
margin_bottom = 528.0
theme = SubResource( 60 )
custom_styles/hover = SubResource( 72 )

[node name="easy" type="Label" parent="menu/difficulty/cc/menu/true"]
margin_left = 9.0
margin_top = 5.0
margin_right = 328.0
margin_bottom = 47.0
custom_fonts/font = SubResource( 62 )
text = "True Fate"
valign = 1

[node name="desc" type="Label" parent="menu/difficulty/cc/menu/true"]
margin_left = 9.0
margin_top = 47.0
margin_right = 328.0
margin_bottom = 132.0
custom_fonts/font = SubResource( 63 )
text = "- The True Test Of Fate

Hint: The Devil"

[node name="exit" type="Button" parent="menu/difficulty/cc/menu"]
margin_left = 334.0
margin_right = 370.0
margin_bottom = 34.0
theme = SubResource( 60 )
custom_styles/hover = SubResource( 69 )
custom_styles/pressed = SubResource( 68 )
custom_styles/normal = SubResource( 68 )
text = "X"

[node name="AnimationPlayer" type="AnimationPlayer" parent="menu/difficulty"]
anims/RESET = SubResource( 65 )
anims/in = SubResource( 66 )
anims/truefate = SubResource( 73 )

[node name="vhs" type="CanvasLayer" parent="menu"]
layer = 15

[node name="VHS" type="ColorRect" parent="menu/vhs"]
material = SubResource( 71 )
margin_left = -2.0
margin_top = 2.0
margin_right = 1920.0
margin_bottom = 1082.0
mouse_filter = 2

[connection signal="pressed" from="menu/cc/vc/New Game" to="menu" method="_on_Button_pressed"]
[connection signal="pressed" from="menu/cc/vc/Continue" to="menu" method="_on_Continue_pressed"]
[connection signal="pressed" from="menu/cc/vc/Mods" to="menu" method="_on_Mods_pressed"]
[connection signal="pressed" from="menu/cc/vc/Exit" to="menu" method="_on_Exit_pressed"]
[connection signal="animation_finished" from="menu/mod_menu/AnimationPlayer" to="menu" method="_on_AnimationPlayer_animation_finished"]
[connection signal="pressed" from="menu/mod_menu/cc/modmenu/info/Play" to="menu" method="_on_Play_pressed"]
[connection signal="item_selected" from="menu/mod_menu/cc/modmenu/selmod" to="menu" method="_on_selmod_item_selected"]
[connection signal="pressed" from="menu/mod_menu/cc/modmenu/exit" to="menu" method="_on_exit_pressed"]
[connection signal="pressed" from="menu/settings_menu/setmenu/exit" to="." method="_on_settings_exit_pressed"]
[connection signal="animation_finished" from="menu/settings_menu/setan" to="." method="_on_setan_animation_finished"]
[connection signal="pressed" from="menu/extras_menu/extmenu/exit" to="." method="_on_extras_exit_pressed"]
[connection signal="animation_finished" from="menu/extras_menu/extan" to="." method="_on_extan_animation_finished"]
[connection signal="animation_finished" from="menu/flicker" to="menu" method="_on_flicker_animation_finished"]
[connection signal="pressed" from="menu/difficulty/cc/menu/easy" to="menu" method="_on_easy_pressed"]
[connection signal="pressed" from="menu/difficulty/cc/menu/medium" to="menu" method="_on_medium_pressed"]
[connection signal="pressed" from="menu/difficulty/cc/menu/hard" to="menu" method="_on_hard_pressed"]
[connection signal="pressed" from="menu/difficulty/cc/menu/true" to="menu" method="_on_true_pressed"]
[connection signal="pressed" from="menu/difficulty/cc/menu/exit" to="menu" method="_on_dif_exit_pressed"]
[connection signal="animation_finished" from="menu/difficulty/AnimationPlayer" to="menu" method="_on_dif_animation_finished"]
